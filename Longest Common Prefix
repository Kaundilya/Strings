class Solution {
public:
    int findMinLen(vector<string>& strs,int n)
    {
        int min=INT_MAX;
        
        for(int i=0;i<n;i++)
        {
            if(strs[i].size()<min)
                min=strs[i].size();
        }
        return min;
    }
    bool allContainsPrefix(vector<string>& strs,int n,string str,int low,int high)
    {
        for(int i=0;i<n;i++)
        {
            for(int j=low;j<=high;j++)
            {
                if(strs[i][j]!=str[j])
                    return false;
            }
        }
        return true;
    }
    string longestCommonPrefix(vector<string>& strs) {
        int n=strs.size();
        if(n==0)
            return "";
      int index=findMinLen(strs,n);
        string prefix;
        int low=0;
        int high=index;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(allContainsPrefix(strs,n,strs[0],low,mid))
            {
               prefix+=strs[0].substr(low,mid-low+1); 
                low=mid+1;
            }
            else
                high=mid-1;
        }
        return prefix;
    }
};
